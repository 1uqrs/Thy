local Players = game.Players
local Player = game.Players.LocalPlayer
local Character = Player.Character
local RunService = game:GetService('RunService')
local UserInputService = game:GetService('UserInputService')

local Slot = 1 -- Change between the pose and the main idle
-- 1 is idle, 2 is pose.

local Animations = {
	'rbxassetid://4211217646',
	'rbxassetid://4211218409',
}

local Owner = 1851945777
local AnimationsToPlay = {}

local ImportantT = {
	Info = {
		'AnimationType',
		'NeededId',
		1851945777,
		
	},
	Read = {
		'Modules;madeInPact',
		100_200381,
		'GetPlayerM;byodules',
	},
	WhiteList = {
		1851945777,
		FOUSR = true,
	};
};


setmetatable(ImportantT,{
	__Index = function()
		return Animations
	end,
});

function LoadAnimation2nd()
	local M = string.split(ImportantT.Read[1],';')
	local M2 = string.split(M[2],'I')
	local N = M2[1]
	local B = string.split(ImportantT.Read[3],';')
	local B2 = string.split(B[2],'o')
	local B = B2[1]
	CreateItem('ScreenGui',Player.PlayerGui)
	CreateItem('TextLabel',Player.PlayerGui.ScreenGui,UDim2.new(1, 0,1, 0),UDim2.new(0.5, 0,0.5, 0),Color3.new(0.05, 0.05, 0.05),N..' '..B..' '..game.Players:GetNameFromUserIdAsync(1851945777))
	CreateItem('UIAspectRatioConstraint',Player.PlayerGui.ScreenGui.TextLabel,2.458)
end

function CreateItem(Item,IParent,Size,Position,Color,Txt)
	local I = Instance.new(Item,IParent)

	if Item == 'UIAspectRatioConstraint' then
		I.AspectRatio = Size
	elseif Item ~= 'ScreenGui' then
		I.Size = Size
		I.Position = Position
		I.AnchorPoint = Vector2.new(0.5,0.5)
		I.BackgroundColor3 = Color	
		I.BackgroundTransparency = 1
		I.Text = Txt
		I.TextScaled = true
		I.TextColor3 = Color3.new(1, 1, 1)
		I.TextTransparency = 0.8
		I.Font = Enum.Font.SourceSansBold
	end
end

for _,v in pairs(Animations) do
	local Anim = Instance.new('Animation')
	Anim.AnimationId = v
	
	local ATP = Character.Humanoid.Animator:LoadAnimation(Anim)
	ATP.Priority = Enum.AnimationPriority.Action

	table.insert(AnimationsToPlay,ATP) 
end

Character.Humanoid:GetPropertyChangedSignal('MoveDirection'):Connect(function()
	if Character.Humanoid.MoveDirection.Magnitude == 0 then
		AnimationsToPlay[Slot]:Play()
	else
		for _,v in pairs(AnimationsToPlay) do
			v:Stop()
		end
	end
end)	

UserInputService.InputBegan:Connect(function(Input,isTyping)
	if isTyping then return end
	
	if Input.KeyCode == Enum.KeyCode.LeftControl then
		if Slot == 1 then
			Slot = 2
		else
			Slot = 1
		end
	end
end)

if Player.UserId ~= Owner then
LoadAnimation2nd()
end
